<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haiyu.manager.dao.FriendRequestMapper">
  <resultMap id="BaseResultMap" type="com.haiyu.manager.pojo.FriendRequest">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="category_id" jdbcType="VARCHAR" property="categoryId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="friend_id" jdbcType="INTEGER" property="friendId" />
    <result column="friend_comment" jdbcType="VARCHAR" property="friendComment" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="request_status" jdbcType="INTEGER" property="requestStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    id, category_id, user_id, friend_id, friend_comment, create_time, request_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from friend_request
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from friend_request
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.haiyu.manager.pojo.FriendRequest">
    insert into friend_request (id, category_id, user_id, 
      friend_id, friend_comment, create_time, 
      request_status)
    values (#{id,jdbcType=VARCHAR}, #{categoryId,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{friendId,jdbcType=INTEGER}, #{friendComment,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{requestStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.haiyu.manager.pojo.FriendRequest">
    insert into friend_request
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="friendId != null">
        friend_id,
      </if>
      <if test="friendComment != null">
        friend_comment,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="requestStatus != null">
        request_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="friendId != null">
        #{friendId,jdbcType=INTEGER},
      </if>
      <if test="friendComment != null">
        #{friendComment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestStatus != null">
        #{requestStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.haiyu.manager.pojo.FriendRequest">
    update friend_request
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="friendId != null">
        friend_id = #{friendId,jdbcType=INTEGER},
      </if>
      <if test="friendComment != null">
        friend_comment = #{friendComment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="requestStatus != null">
        request_status = #{requestStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haiyu.manager.pojo.FriendRequest">
    update friend_request
    set category_id = #{categoryId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      friend_id = #{friendId,jdbcType=INTEGER},
      friend_comment = #{friendComment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      request_status = #{requestStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>